/* =========================
   D·ªÆ LI·ªÜU TRANG CH·ª¶ - CH·ªåN B√ÄI
========================= */

const questionsPerLesson = 20;

// T·∫°o n√∫t b√†i cho t·ª´ng ph·∫ßn
function createLessonButtons(containerId, startQ, endQ) {
  const container = document.getElementById(containerId);
  if (!container) return;

  const totalQuestions = endQ - startQ + 1;
  const totalLessons = Math.ceil(totalQuestions / questionsPerLesson);

  for (let i = 0; i < totalLessons; i++) {
    const lessonStart = startQ + i * questionsPerLesson;
    let lessonEnd = lessonStart + questionsPerLesson - 1;
    if (lessonEnd > endQ) lessonEnd = endQ;

    const btn = document.createElement("button");
    btn.textContent = `B√†i ${i + 1}`;
    btn.className = "lesson-btn";

    // L·∫•y tab t·ª´ containerId
    const tabNumber = containerId.replace("part", "");

    btn.onclick = () => {
      window.location.href = `quiz.html?start=${lessonStart}&end=${lessonEnd}&tab=${tabNumber}`;
    };
    container.appendChild(btn);
  }
}

// Ch·ªâ ch·∫°y tr√™n index.html
if (window.location.pathname.endsWith("index.html") || window.location.pathname === "/") {
  const tabButtons = document.querySelectorAll(".tab-btn");

  // L·∫•y tab t·ª´ URL param, m·∫∑c ƒë·ªãnh 1
  const urlParams = new URLSearchParams(window.location.search);
  const savedTab = urlParams.get("tab") || "1";

  tabButtons.forEach(btn => {
    const partId = "part" + btn.dataset.part;
    const content = document.getElementById(partId);

    if (btn.dataset.part === savedTab) {
      btn.classList.add("active");
      content.style.display = "grid";
    } else {
      btn.classList.remove("active");
      content.style.display = "none";
    }

    btn.addEventListener("click", () => {
      tabButtons.forEach(b => b.classList.remove("active"));
      btn.classList.add("active");

      document.querySelectorAll(".tab-content").forEach(tc => tc.style.display = "none");
      content.style.display = "grid";
    });
  });

  // T·∫°o c√°c b√†i cho t·ª´ng ph·∫ßn
  createLessonButtons("part1", 1, 197);
  createLessonButtons("part2", 198, 295);
  createLessonButtons("part3", 296, 345);
}

/* =========================
   D·ªÆ LI·ªÜU QUIZ
========================= */

let questions = [];
let currentQuestionIndex = 0;
let correctCount = 0;
let wrongCount = 0;
let answered = false; // c·ªù ƒë√°nh d·∫•u c√¢u hi·ªán t·∫°i ƒë√£ tr·∫£ l·ªùi ch∆∞a

// Load d·ªØ li·ªáu quiz
async function loadData() {
  const params = new URLSearchParams(window.location.search);
  const startSTT = parseInt(params.get("start")) || 1;
  const endSTT = parseInt(params.get("end")) || 20;

  const res = await fetch("data.json");
  const data = await res.json();

  // L·ªçc c√¢u h·ªèi d·ª±a tr√™n STT
  questions = data.filter(q => q.STT >= startSTT && q.STT <= endSTT);

  currentQuestionIndex = 0;
  correctCount = 0;
  wrongCount = 0;

  loadQuestion();
}

// Hi·ªÉn th·ªã c√¢u h·ªèi
function loadQuestion() {
  const questionTitle = document.getElementById("question-title");
  const optionsDiv = document.getElementById("options");
  const resultDiv = document.getElementById("result");
  const fullInfo = document.getElementById("full-info");
  const nextBtn = document.getElementById("next-btn");

  if (currentQuestionIndex >= questions.length) {
    questionTitle.innerText = "üéâ Ch√∫c m·ª´ng! B·∫°n ƒë√£ ho√†n th√†nh b√†i n√†y!";
    optionsDiv.style.display = "none";
    nextBtn.style.display = "none";
    fullInfo.style.display = "none";
    resultDiv.innerText = `‚úÖ S·ªë c√¢u ƒë√∫ng: ${correctCount} | ‚ùå S·ªë c√¢u sai: ${wrongCount}`;
    resultDiv.style.color = "#2c3e50";
    return;
  }

  const q = questions[currentQuestionIndex];

  questionTitle.innerText = `(${currentQuestionIndex + 1}) ${q.kanji}`;
  resultDiv.innerText = "";
  fullInfo.style.display = "none";
  fullInfo.innerHTML = "";
  nextBtn.style.display = "none";

  answered = false; // reset c·ªù khi load c√¢u m·ªõi

  // t·∫°o 4 ƒë√°p √°n
  let options = [q.hiragana];
  while (options.length < 4) {
    let random = questions[Math.floor(Math.random() * questions.length)].hiragana;
    if (!options.includes(random)) options.push(random);
  }
  options.sort(() => Math.random() - 0.5);

  optionsDiv.innerHTML = "";
  optionsDiv.style.display = "grid";

  options.forEach(opt => {
    const btn = document.createElement("button");
    btn.textContent = opt;
    btn.className = "option-btn";
    btn.onclick = () => checkAnswer(opt, q);
    optionsDiv.appendChild(btn);
  });
}

// Ki·ªÉm tra ƒë√°p √°n
function checkAnswer(answer, q) {
  const resultDiv = document.getElementById("result");
  const fullInfo = document.getElementById("full-info");
  const nextBtn = document.getElementById("next-btn");

  // Ch·ªâ t√≠nh s·ªë c√¢u ƒë√∫ng/sai khi ch∆∞a tr·∫£ l·ªùi
  if (!answered) {
    if (answer === q.hiragana) {
      correctCount++;
      resultDiv.innerText = "‚úÖ ƒê√∫ng r·ªìi!";
      resultDiv.style.color = "green";
    } else {
      wrongCount++;
      resultDiv.innerText = "‚ùå Sai r·ªìi!";
      resultDiv.style.color = "red";
    }
    answered = true; // ƒë√°nh d·∫•u ƒë√£ tr·∫£ l·ªùi
  } else {
    // N·∫øu nh·∫•n l·∫ßn 2-3, ch·ªâ hi·ªán th√¥ng b√°o m√† kh√¥ng c·ªông s·ªë
    if (answer === q.hiragana) {
      resultDiv.innerText = "‚úÖ ƒê√∫ng r·ªìi!";
      resultDiv.style.color = "green";
    } else {
      resultDiv.innerText = "‚ùå Sai r·ªìi!";
      resultDiv.style.color = "red";
    }
  }

  // Hi·ªÉn th·ªã info box
  fullInfo.innerHTML = `
    <p><b>Kanji:</b> ${q.kanji}</p>
    <p><b>Hiragana:</b> ${q.hiragana}</p>
    <p><b>H√°n Vi·ªát:</b> ${q.hanviet}</p>
    <p><b>Nghƒ©a:</b> ${q.nghia}</p>
  `;
  fullInfo.style.display = "block";

  // Hi·ªÉn th·ªã n√∫t ti·∫øp theo
  nextBtn.style.display = "block";
}

// Chuy·ªÉn c√¢u ti·∫øp theo
function nextQuestion() {
  currentQuestionIndex++;
  loadQuestion();
}

// Quay v·ªÅ trang ch·ªß, gi·ªØ tab hi·ªán t·∫°i
function goHome() {
  const params = new URLSearchParams(window.location.search);
  const tab = params.get("tab") || "1"; // m·∫∑c ƒë·ªãnh tab 1
  window.location.href = `index.html?tab=${tab}`;
}

// Ch·ªâ load quiz n·∫øu l√† quiz.html
if (window.location.pathname.endsWith("quiz.html")) {
  loadData();
}
